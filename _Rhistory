print(h)
}
bs_smry<-data.frame(tLength=seq(1:25))
bs_smry$mean_prop<-apply(bs1000_tl[,2:1001],1,mean, na.rm=T)
bs_smry$sd_prop<-apply(bs1000_tl[,2:1001],1,sd, na.rm=T)
bs_smry[bs_smry==0]<-NA #makes graph neater
limmy<-max(na.omit(bs_smry)$tLength)+1
limits <- aes(ymax = mean_prop + sd_prop, ymin=mean_prop - sd_prop)
pp<-ggplot(bs_smry, aes(x=tLength, y=mean_prop))
pp+geom_bar(stat="identity", fill="dark grey", colour="black")+
geom_errorbar(limits, width=0.5)+
scale_x_continuous(limits=c(0, limmy), breaks=seq(1,limmy))+
theme_classic()+ylab("Mean time spent foraging (prop)")+xlab("Duration of foraging trip (days)")
ggsave(paste("LHI15_foraging",D1, D2, "longallow", longallow, "feed_fun_SINGLE.png", sep="_")) #change feed_fun manually!
bs_Nsmry<-bs1000_Ntl[,1:2]
bs_Nsmry$mean_prop<-apply(bs1000_Ntl[,3:1002],1,mean, na.rm=T)
bs_Nsmry$sd_prop<-apply(bs1000_Ntl[,3:1002],1,sd, na.rm=T)
bs_Nsmry[bs_Nsmry==0]<-NA #makes graph neater
limits <- aes(ymax = mean_prop + sd_prop, ymin=mean_prop - sd_prop)
pp<-ggplot(bs_Nsmry, aes(x=tLength, y=mean_prop))
pp+geom_bar(stat="identity", fill="dark grey", colour="black")+
geom_errorbar(limits, width=0.5)+
scale_x_continuous(limits=c(0,limmy), breaks=seq(1,limmy))+
theme_bw()+ylab("Mean time spent foraging (prop)")+xlab("Duration of foraging trip (days)")+facet_wrap(~NestID)
ggsave(paste("LHI15_Nest_foraging",D1, D2, "longallow", longallow, "feed_fun_SINGLE.png", sep="_"), scale=2) #change feed_fun manually!
D1="2015-03-16"
D2="2015-04-11"
longallow=FALSE
feed_fun=fun_single
## bootstrapping
bs1000_tl<-data.frame(tLength=seq(1:25))
bs1000_Ntl<-expand.grid(tLength=seq(1:25), NestID=unique(nest_comp$NestID))
for(h in 1:1000)
{
out<-lapply(nest_comp[nest_comp$LW_corr=="D",]$diff, FUN=feed_fun)
nest_comp[nest_comp$LW_corr=="D",]$LW_assn<-unlist(out)[seq(1,(length(unlist(out))-1),2)]
nest_comp[nest_comp$LW_corr=="D",]$RW_assn<-unlist(out)[seq(2,length(unlist(out)),2)]
all_trips<-NULL
for(i in unique(nest_comp$NestID))
{
for(j in c("LW", "RW"))
{
if(longallow==TRUE)
{
backs<-NULL
if(j=="LW")
{
backs<-which(nest_comp[nest_comp$NestID==i& nest_comp$Date>=D1 & nest_comp$Date<=D2,]$LW_assn=="B")
if(max(backs)<nrow(nest_comp[nest_comp$NestID==i& nest_comp$Date>=D1 & nest_comp$Date<=D2,]))
{
backs<-c(backs, which(nest_comp[nest_comp$NestID==i& nest_comp$Date>=D1,]$LW_assn=="B")[length(backs)+1])
backs<-na.omit(backs)
}
}
if(j=="RW")
{
backs<-which(nest_comp[nest_comp$NestID==i& nest_comp$Date>=D1 & nest_comp$Date<=D2,]$RW_assn=="B")
if(max(backs)<nrow(nest_comp[nest_comp$NestID==i& nest_comp$Date>=D1 & nest_comp$Date<=D2,]))
{
backs<-c(backs, which(nest_comp[nest_comp$NestID==i& nest_comp$Date>=D1,]$RW_assn=="B")[length(backs)+1])
backs<-na.omit(backs)
}
}
}
if(longallow==FALSE)
{
backs<-NULL
if(j=="LW")
{backs<-which(nest_comp[nest_comp$NestID==i& nest_comp$Date>=D1 & nest_comp$Date<=D2,]$LW_assn=="B")}
if(j=="RW")
{backs<-which(nest_comp[nest_comp$NestID==i& nest_comp$Date>=D1 & nest_comp$Date<=D2,]$RW_assn=="B")}
}
trip_lz<-NULL
for(k in 2:length(backs))
{
tl1<-backs[k]-backs[k-1]
trip_lz<-c(trip_lz, tl1)
}
df_internal<-data.frame(NestID=i, BirdID=j, tLength=trip_lz)
all_trips<-rbind(all_trips, df_internal)
}
}
# to calc hists per individual nests (pairs) %%$$
nest_propz<-NULL
tripPropN<-expand.grid(tLength=seq(1:25), NestID=unique(nest_comp$NestID), tProp=0)
for(i in unique(all_trips$NestID))
{
if(sum(all_trips[all_trips$NestID==i,]$tLength, na.rm=T)==0){next} # skips nest on rare occasion that both birds are NA
df1<-data.frame(NestID=i,table(na.omit(all_trips[all_trips$NestID==i,]$tLength))) # removes NA values for birds in small time selections
df1$Var1<-as.numeric(as.character(df1$Var1))
df1$TotTrip<-df1$Var1 * df1$Freq
df1$TripProp<-df1$TotTrip/sum(df1$TotTrip)
nest_propz<-rbind(nest_propz, df1)
for(j in unique(df1$Var1))
{
tripPropN[tripPropN$NestID==i & tripPropN$tLength==j,]$tProp<-df1[df1$Var1==j,]$TripProp
}
}
# %%$$
# to calc hists per individual birds ~~**
all_trips$BirdID2<-paste(all_trips$NestID, all_trips$BirdID,sep="_")
trip_propz<-NULL
for(i in unique(all_trips$BirdID2))
{
if(is.na(sum(all_trips[all_trips$BirdID2==i,]$tLength))){next} # this next catches any NA birds for whatever reason and removes. corrects warning created in max(backs) above
df1<-data.frame(BirdID2=i,table(all_trips[all_trips$BirdID2==i,]$tLength))
df1$Var1<-as.numeric(as.character(df1$Var1))
df1$TotTrip<-df1$Var1 * df1$Freq
df1$TripProp<-df1$TotTrip/sum(df1$TotTrip)
#print(i);print(sum(df1$TotTrip))
trip_propz<-rbind(trip_propz, df1)
}
#length(unique(trip_propz$BirdID2)) #shows how many birds are monitored
tripPropB<-NULL
for(i in 1:25)
{
df1<-data.frame(tLength=i, tProp=sum(trip_propz[trip_propz$Var1==i,]$TripProp)/length(unique(trip_propz$BirdID2)))
tripPropB<-rbind(tripPropB, df1)
}
# ~~**
# compile birds bootstrap
bs1000_tl<-cbind(bs1000_tl, tripPropB[,2] )
names(bs1000_tl)[names(bs1000_tl)=="tripPropB[, 2]"]<-paste("run", h, sep="_")
# compile nests bootstrap
bs1000_Ntl<-cbind(bs1000_Ntl, tripPropN[,3] )
names(bs1000_Ntl)[names(bs1000_Ntl)=="tripPropN[, 3]"]<-paste("run", h, sep="_")
print(h)
}
bs_smry<-data.frame(tLength=seq(1:25))
bs_smry$mean_prop<-apply(bs1000_tl[,2:1001],1,mean, na.rm=T)
bs_smry$sd_prop<-apply(bs1000_tl[,2:1001],1,sd, na.rm=T)
bs_smry[bs_smry==0]<-NA #makes graph neater
limmy<-max(na.omit(bs_smry)$tLength)+1
limits <- aes(ymax = mean_prop + sd_prop, ymin=mean_prop - sd_prop)
pp<-ggplot(bs_smry, aes(x=tLength, y=mean_prop))
pp+geom_bar(stat="identity", fill="dark grey", colour="black")+
geom_errorbar(limits, width=0.5)+
scale_x_continuous(limits=c(0, limmy), breaks=seq(1,limmy))+
theme_classic()+ylab("Mean time spent foraging (prop)")+xlab("Duration of foraging trip (days)")
ggsave(paste("LHI15_foraging",D1, D2, "longallow", longallow, "feed_fun_SINGLE.png", sep="_")) #change feed_fun manually!
bs_Nsmry<-bs1000_Ntl[,1:2]
bs_Nsmry$mean_prop<-apply(bs1000_Ntl[,3:1002],1,mean, na.rm=T)
bs_Nsmry$sd_prop<-apply(bs1000_Ntl[,3:1002],1,sd, na.rm=T)
bs_Nsmry[bs_Nsmry==0]<-NA #makes graph neater
limits <- aes(ymax = mean_prop + sd_prop, ymin=mean_prop - sd_prop)
pp<-ggplot(bs_Nsmry, aes(x=tLength, y=mean_prop))
pp+geom_bar(stat="identity", fill="dark grey", colour="black")+
geom_errorbar(limits, width=0.5)+
scale_x_continuous(limits=c(0,limmy), breaks=seq(1,limmy))+
theme_bw()+ylab("Mean time spent foraging (prop)")+xlab("Duration of foraging trip (days)")+facet_wrap(~NestID)
ggsave(paste("LHI15_Nest_foraging",D1, D2, "longallow", longallow, "feed_fun_SINGLE.png", sep="_"), scale=2) #change feed_fun manually!
rm(list=ls())
library(ggplot2)
library(lubridate)
setwd("~/grive/phd/analyses/foraging_strategy")
# NEST COMP RECEIVED SOME MANUAL CLEANING IN CALC NAs in ck weight section changed to 0s
nest_comp<-read.csv("LHI_2015_nest_weights_attendance_cleaned.csv", h=T, strip.white=T)
nest_comp$Date<-ymd(nest_comp$Date)
head(nest_comp)
ggplot(data=nest_comp, aes(y=diff, x=Date, group=Date)) + geom_boxplot()
ggplot(data=nest_comp[nest_comp$Chick=="Fed",], aes(y=diff, x=Date, group=Date)) + geom_boxplot()
atten<-read_excel("~/grive/phd/fieldwork/LHI_Feb_2015/data/Adult_attendence_2015.xlsx", 1 ,
skip=0, col_names=T)
m1<-as.matrix(atten)
dimnames(m1)[[1]]<-m1[,1]
m1<-m1[,-1]
weight<-read_excel("~/grive/phd/fieldwork/LHI_Feb_2015/data/Chick_data_2015.xlsx", 1 ,
skip=2, col_names=T, col_types=c("character",
rep("numeric", 59)))
ck_death<-data.frame(NestId=weight$NestID, Survival=names(weight)[apply(weight, 1, FUN=function(x) max(which(is.na(x)!=TRUE)))])
library(readxl)
library(ggplot2)
library(lubridate)
setwd("~/grive/phd/analyses/foraging_strategy")
atten<-read_excel("~/grive/phd/fieldwork/LHI_Feb_2015/data/Adult_attendence_2015.xlsx", 1 ,
skip=0, col_names=T)
m1<-as.matrix(atten)
dimnames(m1)[[1]]<-m1[,1]
m1<-m1[,-1]
weight<-read_excel("~/grive/phd/fieldwork/LHI_Feb_2015/data/Chick_data_2015.xlsx", 1 ,
skip=2, col_names=T, col_types=c("character",
rep("numeric", 59)))
ck_death<-data.frame(NestId=weight$NestID, Survival=names(weight)[apply(weight, 1, FUN=function(x) max(which(is.na(x)!=TRUE)))])
ck_death
nest_comp<-read.csv("LHI_2015_nest_weights_attendance_cleaned.csv", h=T, strip.white=T)
nest_comp$Date<-ymd(nest_comp$Date)
weight<-read_excel("~/grive/phd/fieldwork/LHI_Feb_2015/data/Chick_data_2015.xlsx", 1 ,
skip=2, col_names=T, col_types=c("character",
rep("numeric", 59)))
ck_death<-data.frame(NestId=weight$NestID, Survival=names(weight)[apply(weight, 1, FUN=function(x) max(which(is.na(x)!=TRUE)))])
gg_feed<-NULL
for (i in 3:max(which(colSums(weight[,2:59], na.rm=T)>0))) # weight changes run from the 18th of Feb
{
d1<-data.frame(weight=weight[,i], diff=weight[,i]-weight[,(i-1)], Date=names(weight)[i], NestID=weight$NestID)
gg_feed<-rbind(gg_feed, d1)
}
gg_feed$Date<-dmy(substr(gg_feed$Date,1,11))
gg_feed$Chick<-as.factor(sapply(gg_feed$diff, FUN=function(x) (if(is.na(x)) {x="NA"}else{if(x>=0){"Fed"}else{"Not fed"}})))
## have set to weight diff = 0 then is 'fed' ie hasnt lost mass in 24 hr, althou for starving chicks this could be flatlining
ggplot(data=nest_comp[nest_comp$Chick=="Fed",], aes(y=diff, x=Date, group=Date)) + geom_boxplot()
head(gg_feed)
head(ck_death)
ggplot(data=gg_feed[gg_feed$Chick=="Fed",], aes(y=diff, x=Date, group=Date)) + geom_boxplot()
ggplot(data=gg_feed[gg_feed$Chick=="Fed",], aes(y=diff, x=Date, group=Date)) + geom_boxplot() + geom_point(data=ck_death, aes(y=NestId, x=as.Date(Survival, format="%d/%m/%Y")), colour=NestId)
ck_death<-data.frame(NestID=weight$NestID, Survival=names(weight)[apply(weight, 1, FUN=function(x) max(which(is.na(x)!=TRUE)))])
ggplot(data=gg_feed[gg_feed$Chick=="Fed",], aes(y=diff, x=Date, group=Date)) + geom_boxplot() + geom_point(data=ck_death, aes(y=NestId, x=as.Date(Survival, format="%d/%m/%Y"), colour=NestID))
ggplot(data=gg_feed[gg_feed$Chick=="Fed",], aes(y=diff, x=Date, group=Date)) + geom_boxplot() + geom_point(data=ck_death, aes(y=NestID, x=as.Date(Survival, format="%d/%m/%Y"), colour=NestID))
ggplot(data=gg_feed[gg_feed$Chick=="Fed",], aes(y=diff, x=Date, group=Date)) + geom_boxplot() + geom_point(data=ck_death, aes(y=NestID, x=as.Date(Survival, format="%d/%m/%Y"), colour=NestID))
ggplot(data=gg_feed[gg_feed$Chick=="Fed",], aes(y=diff, x=Date, group=Date)) + geom_boxplot()
ck_death<-data.frame(NestID=weight$NestID, Date=names(weight)[apply(weight, 1, FUN=function(x) max(which(is.na(x)!=TRUE)))])
ggplot(data=gg_feed[gg_feed$Chick=="Fed",], aes(y=diff, x=Date, group=Date)) + geom_boxplot() + geom_point(data=ck_death, aes(y=NestID, x=as.Date(Date, format="%d/%m/%Y"), colour=NestID))
ck_death<-data.frame(NestID=weight$NestID, Date=names(weight)[apply(weight, 1, FUN=function(x) max(which(is.na(x)!=TRUE)))])
ck_death$Date<-dmy(substr(ck_death$Date,1,11))
head(ck_death)
ggplot(data=gg_feed[gg_feed$Chick=="Fed",], aes(y=diff, x=Date, group=Date)) + geom_boxplot() + geom_point(data=ck_death, aes(y=NestID, x=Date, colour=NestID))
ggplot(data=gg_feed[gg_feed$Chick=="Fed",], aes(y=diff, x=Date, group=Date)) + geom_boxplot() + geom_point(data=ck_death, aes(y=NestID, x=Date, colour="red"))
ggplot(data=gg_feed, aes(y=diff, x=Date, group=Date)) + geom_boxplot() + geom_point(data=ck_death, aes(y=NestID, x=Date, colour="red"))
ggplot(data=gg_feed, aes(y=weight, x=Date, group=Date)) + geom_boxplot() + geom_point(data=ck_death, aes(y=NestID, x=Date, colour="red"))
gg_feed$harrass="no"
head(nest_comp)
head(gg_feed)
gg_feed[gg_feed$NestID %in% nest_comp$NestID,]
nrow(gg_feed[gg_feed$NestID %in% nest_comp$NestID,])
nrow(gg_feed)
gg_feed[gg_feed$NestID %in% nest_comp$NestID,]$harrass<-"yes"
ggplot(data=gg_feed, aes(y=weight, x=Date, group=Date, colour=harrass)) + geom_boxplot()
head(gg_feed)
tail(gg_feed)
ggplot(data=gg_feed, aes(y=weight, x=Date, group=Date)) + geom_boxplot() +facet_wrap(~harrass)
ggplot(data=gg_feed[gg_feed$Chick=="Fed",], aes(y=diff, x=Date, group=Date)) + geom_boxplot() + geom_point(data=ck_death, aes(y=NestID, x=Date, colour="red"))
dat_2004<-read.csv("~/grive/phd/sourced_data/IH_DP_moonphase/IH_DP_ck_weight_feb_may_04.csv", h=T)
dat_2004<-dat_2004[dat_2004$AM_PM=="PM",] # select only PM weights, comparable with other yrs
weight_2004<-read.csv("~/grive/phd/sourced_data/IH_DP_moonphase/IH_DP_ck_weight_feb_may_04.csv", h=T)
weight_2004<-weight_2004[weight_2004$AM_PM=="PM",] # select only PM weights, comparable with other yrs
head(weight)
head(weight_2004)
head(gg_feed)
g_dat_2004<-NULL
for (i in 3:19)
{
d1<-data.frame(weight=dat_2004[,i], Date=dat_2004[,1], Nest.ID=names(dat_2004)[i])
g_dat_2004<-rbind(g_dat_2004, d1)
}
head(g_dat_2004)
library(reshape2)
m1<-melt(weight_2004)
?melt
m1<-melt(weight_2004, value.name=Nest.ID)
head(weight_2204)
head(weight_2004)
m1<-melt(weight_2004, value.name=Date)
m1<-melt(weight_2004, value.name="Date")
head(m1)
m1<-melt(weight_2004)
head(m1)
tail(m1)
weight_2004<-melt(weight_2004, value.name="weight")
head(weight_2004)
names(weight_2004)
gsub(names(weight_2004), "variable", "NestID")
names(weight_2004)
names(weight_2004)[3]
names(weight_2004)[3]<-"NestID"
weight_2014<-read_excel("~/grive/phd/fieldwork/LHI_Mar_2014/data/Chick_data_2014.xlsx", 1 ,
skip=2, col_names=T, col_types=c("character",
rep("numeric", 59)))
weight_2014<-read_excel("~/grive/phd/fieldwork/LHI_Mar_2014/data/Chick_data_2014.xlsx", 1 ,
skip=2, col_names=T, col_types=c("character",
rep("numeric", 20)))
weight_2014<-read_excel("~/grive/phd/fieldwork/LHI_Mar_2014/data/Chick_data_2014.xlsx", 1 ,
skip=2, col_names=T)
head(weight)
str(weight)
weight_2014<-read_excel("~/grive/phd/fieldwork/LHI_Mar_2014/data/Chick_data_2014.xlsx", 1 ,
skip=2, col_names=T)
head(weight_2015)
head(weight_2014)
as.Date(41703)
?as.Date
as.Date(names(weight_2014), origin = "1900-01-01")
as.Date(41703, origin = "1900-01-01")
nrow(weight_2013)
nrow(weight_2014)
str(weight_2014)
length(weight_2014)
weight_2014<-read.xlsx2("D:/research/phd/fieldwork/LHI_Mar_2014/data/Chick_data_2014.xlsx", 1 ,
startRow=3, header=T, colClasses=
rep("numeric", 21))
weight_2014<-read.xlsx2("D:/research/phd/fieldwork/LHI_Mar_2014/data/Chick_data_2014.xlsx", 1 ,
startRow=3, header=T, colClasses=
rep("numeric", 21))
weight_2014<-read_excel("~/grive/phd/fieldwork/LHI_Mar_2014/data/Chick_data_2014.xlsx", 1 ,
skip=2, col_names=T, col_types=
rep("numeric", 59))
weight_2014<-read_excel("~/grive/phd/fieldwork/LHI_Mar_2014/data/Chick_data_2014.xlsx", 1 ,
skip=2, col_names=T, col_types=
rep("numeric", 21))
head(weight)
str(weight)
str(weight_2014)
weight_2014
names(weight_2014)[2:21]
names(weight_2014)[1:21]
names(weight_2014)[1:22]
weight_2014<-read_excel("~/grive/phd/fieldwork/LHI_Mar_2014/data/Chick_data_2014.xlsx", 1 ,
skip=2, col_names=T, col_types=rep("numeric", 21)) #"DEAD" is converted NA
as.Date(names(weight_2014)[2:21], origin = "1900-01-01")
names(weight_2014)[2:21]
as.Date(41703, origin = "1900-01-01")
as.Date(41703, origin = "1899-12-30")
sapply(weight_2014)[2:21], FUN=function(x) {as.Date(x, origin = "1899-12-30")})
sapply(weight_2014)[2:21], 1,FUN=function(x) {as.Date(x, origin = "1899-12-30")})
sapply(names(weight_2014)[2:21], FUN=function(x) {as.Date(x, origin = "1899-12-30")})
as.Date("41703", origin = "1899-12-30")
as.Date(as.numeric(names(weight_2014)[2:21]), origin = "1900-01-01")
as.Date(as.numeric(names(weight_2014)[2:21]), origin = "1899-12-30")
names(weight_2014)[2:21]<-as.Date(as.numeric(names(weight_2014)[2:21]), origin = "1899-12-30") # origin dumb on MS Excel
head(weight_2014)
names(weight_2014)[2:21]<-as.Date(as.numeric(names(weight_2014)[2:21]), origin = "1899-12-30") # origin dumb on MS Excel
head(weight_2014)
weight_2014<-read_excel("~/grive/phd/fieldwork/LHI_Mar_2014/data/Chick_data_2014.xlsx", 1 ,
skip=2, col_names=T, col_types=rep("numeric", 21)) #"DEAD" is converted NA
names(weight_2014)[2:21]<-as.Date(as.numeric(names(weight_2014)[2:21]), origin = "1899-12-30") # origin dumb on MS Excel
head(weight)
head(weight_2014)
?dmy
weight_2014<-read_excel("~/grive/phd/fieldwork/LHI_Mar_2014/data/Chick_data_2014.xlsx", 1 ,
skip=2, col_names=T, col_types=rep("numeric", 21)) #"DEAD" is converted NA
dmy(names(weight_2014)[2:21])
ymd(names(weight_2014)[2:21])
ymd(as.numeric(names(weight_2014)[2:21]))
dmy(as.numeric(names(weight_2014)[2:21]))
weight_2014<-read_excel("~/grive/phd/fieldwork/LHI_Mar_2014/data/Chick_data_2014.xlsx", 1 ,
skip=2, col_names=T, col_types=rep("numeric", 21)) #"DEAD" is converted NA
weight_2014<-melt(weight_2014, value.name="weight")
head(weight_2014)
weight_2014<-read_excel("~/grive/phd/fieldwork/LHI_Mar_2014/data/Chick_data_2014.xlsx", 1 ,
skip=2, col_names=T, col_types=rep("numeric", 21)) #"DEAD" is converted NA
head(weight_2014)
?melt
melt(weight_2014)
melt(weight_2014, var.id="NestID")
head(melt(weight_2014, var.id="NestID"))
weight_2004<-read.csv("~/grive/phd/sourced_data/IH_DP_moonphase/IH_DP_ck_weight_feb_may_04.csv", h=T)
head(weight_20014)
head(weight_2004)
head(weight_2014)
m1<-melt(weight_2014, var.id="NestID")
m1<-melt(weight_2014)
weight_2014<-read_excel("~/grive/phd/fieldwork/LHI_Mar_2014/data/Chick_data_2014.xlsx", 1 ,
skip=2, col_names=T, col_types=rep("numeric", 21)) #"DEAD" is converted NA
m1<-melt(weight_2014)
head(m1)
head(m1, value.name="weight")
m1<-melt(weight_2014, value.name="weight")
head(m1, value.name="weight")
head(m1, value.name="weight", id=2)
head(m1, value.name="weight", id=2:20)
head(m1, value.name="weight", id=1)
m1<-melt(weight_2014, value.name="weight", id=1)
head(m1)
m1<-melt(weight_2014, value.name="weight", id=2)
head(m1)
nrow(m1)
m1<-melt(weight_2014, value.name="weight", id=1)
nrow(m1)
head(m1)
weight_2004<-read.csv("~/grive/phd/sourced_data/IH_DP_moonphase/IH_DP_ck_weight_feb_may_04.csv", h=T)
weight_2004<-weight_2004[weight_2004$AM_PM=="PM",] # select only PM weights, comparable with other yrs
head(weight_2004)
head(melt(weight_2004, value.name="weight", id=1))
head(melt(weight_2004, value.name="weight", id=2))
head(melt(weight_2004, value.name="weight", id=3))
head(melt(weight_2004, value.name="weight"))
weight_2004$AM_PM<-NULL
head(melt(weight_2004, value.name="weight", id=1))
tail(melt(weight_2004, value.name="weight", id=1))
weight_2004<-read.csv("~/grive/phd/sourced_data/IH_DP_moonphase/IH_DP_ck_weight_feb_may_04.csv", h=T)
weight_2004<-weight_2004[weight_2004$AM_PM=="PM",] # select only PM weights, comparable with other yrs
weight_2004$AM_PM<-NULL
weight_2004<-melt(weight_2004, value.name="weight", id=1)
head(weight)
head(weight_2004)
names(weight_2004)[2]<-"NestID"
head(weight_2004)
weight_2014<-read_excel("~/grive/phd/fieldwork/LHI_Mar_2014/data/Chick_data_2014.xlsx", 1 ,
skip=2, col_names=T, col_types=rep("numeric", 21)) #"DEAD" is converted NA
weight_2014<-melt(weight_2014, value.name="weight", id=1)
head(weight_2014)
str(weight_2014)
names(weight_2014)[2]<-"Date"
as.Date(weight_2014$Date, origin = "1899-12-30")
as.Date(as.numeric(as.character(weight_2014$Date)), origin = "1899-12-30")
weight_2014$Date<-as.Date(as.numeric(as.character(weight_2014$Date)), origin = "1899-12-30") # origin dumb on MS Excel
head(weight)
head(weight_2004)
head(weight_2014)
weight_2015<-read_excel("~/grive/phd/fieldwork/LHI_Feb_2015/data/Chick_data_2015.xlsx", 1 ,
skip=2, col_names=T, col_types=c("character",
rep("numeric", 59)))
head(weight_2015)
weight_2015<-melt(weight_2015, value.name="weight", id=1)
head(weight_2015)
names(weight_2014)[2]<-"Date"
head(weight_2015)
names(weight_2015)[2]<-"Date"
head(weight_2015)
head(weight_2014)
head(weight_2004)
str(weight_2015)
str(weight_2014)
str(weight_2004)
weight_2004<-cbind(weight_2004[,2], weight_2004[,1], weight_2004[,3])
str(weight_2004)
head(weight_2004)
head(weight_2004[, c(2,1,3)])
weight_2014<-read_excel("~/grive/phd/fieldwork/LHI_Mar_2014/data/Chick_data_2014.xlsx", 1 ,
skip=2, col_names=T, col_types=rep("numeric", 21)) #"DEAD" is converted NA
weight_2014<-melt(weight_2014, value.name="weight", id=1)
names(weight_2014)[2]<-"Date"
weight_2004<-read.csv("~/grive/phd/sourced_data/IH_DP_moonphase/IH_DP_ck_weight_feb_may_04.csv", h=T)
weight_2004<-weight_2004[weight_2004$AM_PM=="PM",] # select only PM weights, comparable with other yrs
weight_2004$AM_PM<-NULL
weight_2004<-melt(weight_2004, value.name="weight", id=1)
names(weight_2004)[2]<-"NestID"
head(weight_2004[, c(2,1,3)])
weight_2004<-weight_2004[, c(2,1,3)]
head(weight_2004)
head(weight_2004; weight_2014)
str(weight_2004)
str(weight_2014)
str(weight_2015)
weight_2004$NestID<-as.character(weight_2004$NestID)
weight_2014$NestID<-as.character(weight_2014$NestID)
weight_2015$NestID<-as.character(weight_2015$NestID)
str(weight_2004)
str(weight_2014)
str(weight_2015)
dmy(weight_2004$Date)
dmy(weight_2015$Date)
as.Date(as.numeric(as.character(weight_2014$Date)), origin = "1899-12-30")
dmy(as.Date(as.numeric(as.character(weight_2014$Date)), origin = "1899-12-30"))
ymd(as.Date(as.numeric(as.character(weight_2014$Date)), origin = "1899-12-30"))
dmy(weight_2015$Date)
weight_2004$Date<-dmy(weight_2004$Date)
weight_2014$Date<-ymd(as.Date(as.numeric(as.character(weight_2014$Date)), origin = "1899-12-30"))
weight_2015$Date<-dmy(weight_2015$Date)
str(weight_2004)
str(weight_2014)
str(weight_2015)
weight_yrs<-rbind(weight_2004, weight_2014, weight_2015)
head(weight_yrs)
year(weight_yrs$Date)
weight_yrs$Year<-year(weight_yrs$Date)
order(weight_yrs$Date)
weight_yrs<-weight_yrs[order(weight_yrs$Date),]
weight_yrs[1:100,]
weight_yrs[300:800,]
gg_feed<-NULL
for (i in 3:max(which(colSums(weight[,2:59], na.rm=T)>0))) # weight changes run from the 18th of Feb
{
d1<-data.frame(weight=weight[,i], diff=weight[,i]-weight[,(i-1)], Date=names(weight)[i], NestID=weight$NestID)
gg_feed<-rbind(gg_feed, d1)
}
gg_feed$Date<-dmy(substr(gg_feed$Date,1,11))
gg_feed$Chick<-as.factor(sapply(gg_feed$diff, FUN=function(x) (if(is.na(x)) {x="NA"}else{if(x>=0){"Fed"}else{"Not fed"}})))
#
weight_yrs$diff<-NA
weight_yrs$temp_id<-paste(weight_yrs$Year, weight_yrs$NestID, sep="_")
head(weight_yrs)
unique(weight_yrs$temp_id)
?order
?sort
i="2004_C1a"
weight_yrs[weight_yrs$NestID==i,]
weight_yrs[weight_yrs$temp_id==i,]
sapply(weight_yrs[weight_yrs$temp_id==i,]$weight, FUN=(x) {x+x[which(x) +1]})
sapply(weight_yrs[weight_yrs$temp_id==i,]$weight, FUN=(x) {x+1})
sapply(weight_yrs[weight_yrs$temp_id==i,]$weight, FUN=(x){x+1})
sapply(weight_yrs[weight_yrs$temp_id==i,]$weight, FUN=function(x) {x+x[which(x) +1]})
sapply(weight_yrs[weight_yrs$temp_id==i,]$weight, FUN=function(x) {x+1})
sapply(weight_yrs[weight_yrs$temp_id==i,]$weight, FUN=function(x) {which(x)})
sapply(weight_yrs[weight_yrs$temp_id==i,]$weight, FUN=function(x) {length(x)})
weight_yrs[weight_yrs$temp_id==i,]$weight
weight_yrs[weight_yrs$temp_id==i,]
weight_yrs[weight_yrs$temp_id==i,]$diff[2]
j=2
weight_yrs[weight_yrs$temp_id==i,]$weight[j]
weight_yrs[weight_yrs$temp_id==i,]$weight[(j-1)]
for(j in 2:nrow(weight_yrs[weight_yrs$temp_id==i,]))
{
weight_yrs[weight_yrs$temp_id==i,]$diff[j]<-
weight_yrs[weight_yrs$temp_id==i,]$weight[j]-weight_yrs[weight_yrs$temp_id==i,]$weight[(j-1)]
}
weight_yrs[weight_yrs$temp_id==i,]
for (i in unique(weight_yrs$temp_id))
{
for(j in 2:nrow(weight_yrs[weight_yrs$temp_id==i,]))
{
weight_yrs[weight_yrs$temp_id==i,]$diff[j]<-
weight_yrs[weight_yrs$temp_id==i,]$weight[j]-weight_yrs[weight_yrs$temp_id==i,]$weight[(j-1)]
}
}
head(weight_yrs)
tail(weight_yrs)
weight_yrs[600:1000,]
weight_yrs[weight_yrs$NestID==C9,]
weight_yrs[weight_yrs$NestID=="C9",]
weight_yrs$temp_id<-NULL
weight_yrs$Feed<-as.factor(sapply(weight_yrs$diff, FUN=function(x) (if(is.na(x)) {x="NA"}else{if(x>=0){"Fed"}else{"Not fed"}})))
head(weight_yrs)
weight_yrs[600:1000,]
